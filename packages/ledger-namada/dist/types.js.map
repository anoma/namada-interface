{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":";;;AAgEA,MAAa,SAAS;IASpB,YAAY,SAAsB;QAChC,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;YAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;YACrB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;YAC3B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;YAC9B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;YAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;SACtB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;YACpB,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAA;YACxB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAA;YAC1B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,CAAA;YAChC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAA;YAC9B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAA;SACrC;IACH,CAAC;CACF;AA1BD,8BA0BC","sourcesContent":["import { LedgerError } from './common'\n\nexport interface ResponseBase {\n  errorMessage: string\n  returnCode: LedgerError\n}\n\nexport interface ResponseAddress extends ResponseBase {\n  publicKey: Buffer\n  address: Buffer\n}\n\nexport interface ResponseVersion extends ResponseBase {\n  testMode: boolean\n  major: number\n  minor: number\n  patch: number\n  deviceLocked: boolean\n  targetId: string\n}\n\nexport interface ResponseAppInfo extends ResponseBase {\n  appName: string\n  appVersion: string\n  flagLen: number\n  flagsValue: number\n  flagRecovery: boolean\n  flagSignedMcuCode: boolean\n  flagOnboarded: boolean\n  flagPINValidated: boolean\n}\n\nexport interface ResponseDeviceInfo extends ResponseBase {\n  targetId: string\n  seVersion: string\n  flag: string\n  mcuVersion: string\n}\n\nexport interface ResponseShieldedAddress extends ResponseBase {\n  raw_pkd: Buffer\n  bech32m_len: number\n  bech32m_addr: Buffer\n}\n\nexport interface ResponseIncomingViewingKey extends ResponseBase {\n  raw_ivk: Buffer\n}\n\nexport interface ResponseOutgoingViewingKey extends ResponseBase {\n  raw_ovk: Buffer\n}\n\nexport interface ResponseNullifier extends ResponseBase {\n  raw_nf: Buffer\n}\n\nexport interface ISignature {\n  raw: Buffer\n  salt: Buffer\n  indices: Buffer\n  pubkey: Buffer\n  signature: Buffer | null\n}\nexport class Signature implements ISignature {\n  raw: Buffer\n  salt: Buffer\n  indices: Buffer\n  pubkey: Buffer\n  signature: Buffer | null\n\n  isFilled: boolean\n\n  constructor(signature?: ISignature) {\n    if (signature == null) {\n      this.raw = Buffer.from([])\n      this.isFilled = false\n      this.salt = Buffer.from([])\n      this.indices = Buffer.from([])\n      this.pubkey = Buffer.from([])\n      this.signature = null\n    } else {\n      this.isFilled = true\n      this.raw = signature.raw\n      this.salt = signature.salt\n      this.indices = signature.indices\n      this.pubkey = signature.pubkey\n      this.signature = signature.signature\n    }\n  }\n}\n\nexport interface ResponseSign extends ResponseBase {\n  wrapperSignature: Signature\n  rawSignature: Signature\n}\n"]}